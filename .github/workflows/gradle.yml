name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: Run tests
        run: ./gradlew test

  code-analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: |
            ${{ runner.os }}-sonar
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube

  code-quality:
    runs-on: ubuntu-latest
    needs: code-analysis
    steps:
      - name: Check Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Checking SonarCloud Quality Gate status..."
          quality_gate_status=$(curl -s -u $SONAR_TOKEN: "https://sonarcloud.io/api/qualitygates/project_status?projectKey=hind23_ogl_tp" | jq -r '.projectStatus.status')
          if [[ "$quality_gate_status" == "ERROR" || "$quality_gate_status" == "FAILURE" ]]; then
            echo "Quality Gate failed. Stopping the pipeline."
            exit 1
          else
            echo "Quality Gate passed."
          fi

  build:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build
        run: ./gradlew build
      - name: Generate JavaDoc
        run: ./gradlew javadoc
      - name: Archive JavaDoc
        uses: actions/upload-artifact@v3
        with:
          name: javadoc
          path: build/docs/javadoc
      - name: Archive JAR file
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: build/libs/*.jar

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Submit dependency graph
        uses: gradle/actions/dependency-submission@v4.0.0